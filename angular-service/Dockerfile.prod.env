# Stage 1: Build the Angular application
FROM node:16.14.2 AS build

# Set the working directory
WORKDIR /usr/src/app

# Install Angular CLI globally
RUN npm install @angular/cli -g

# Copy the package.json and package-lock.json files to the working directory
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application files to the working directory
COPY . .

# Copy the environment template file
COPY src/environments/environment.prod.template.ts src/environments/environment.prod.template.ts

# Install gettext for envsubst
RUN apt-get update && apt-get install -y gettext-base

# Replace environment variables in the template
RUN envsubst < src/environments/environment.prod.template.ts > src/environments/environment.prod.ts

# Build the Angular application in production mode
RUN npm run build --prod
# Build the Angular application
# RUN node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build --prod

# Stage 2: Serve the application using nginx
FROM nginx:alpine

# Set working directory for NGINX container
WORKDIR /usr/share/nginx/html

# Remove the default nginx content
RUN rm -rf /usr/share/nginx/html/*

# Copy the built Angular application from the build stage
COPY --from=build /usr/src/app/dist/pbx /usr/share/nginx/html

# Copy custom nginx configuration
COPY ./nginx/default.conf /etc/nginx/conf.d/default.conf

# Expose port 8080
EXPOSE 8080

# Start nginx server
CMD ["nginx", "-g", "daemon off;"]
